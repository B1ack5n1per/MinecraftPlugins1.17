package com.Taylor.BasicPlugin;

import java.util.HashMap;

import org.bukkit.ChatColor;
import org.bukkit.Location;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.PlayerDeathEvent;
import org.bukkit.plugin.java.JavaPlugin;


public class Main extends JavaPlugin implements Listener {
	
	private HashMap<Player, Location> deathLocs;
	@Override
	public void onEnable() {
		this.getServer().getPluginManager().registerEvents(this, this);
		deathLocs = new HashMap<Player, Location>();
	}
	
	@Override
	public void onDisable() {
		
	}
	
	@EventHandler
	public void onDeath(PlayerDeathEvent e) {
		deathLocs.put(e.getEntity(), e.getEntity().getLocation());
	}
	
	@Override
	public boolean onCommand(CommandSender sender, Command command, String label, String[] args) {
		if (command.getName().equalsIgnoreCase("getDeathLocation")) {
			if (args.length > 0) {
				for (Player player : deathLocs.keySet()) {
					if (player.getName().equals(args[0])) {
						sender.sendMessage(locToString(deathLocs.get(player)));
						return true;
					}
				}
				sender.sendMessage(ChatColor.RED + "player not found");
			}
			return true;
		}
		
		if (command.getName().equalsIgnoreCase("peek")) {
			if (sender instanceof Player) {
				if (isOp((Player) sender)) {
					if (args.length > 0) {
						for (Player player : this.getServer().getOnlinePlayers()) {
							if (player.getName().equals(args[0])) {
								((Player) sender).openInventory(player.getInventory());
								return true;
							}
						}
						sender.sendMessage(ChatColor.RED + "player not found");
						return true;
					}
					sender.sendMessage(ChatColor.RED + "improper usage /peek <player>");
					return true;
				}
				sender.sendMessage(ChatColor.RED + "you do not have permission to use this command");
			}
			return true;
		}
		
		if (command.getName().equalsIgnoreCase("peekEChest")) {
			if (sender instanceof Player) {
				if (isOp((Player) sender)) {
					if (args.length > 0) {
						for (Player player : this.getServer().getOnlinePlayers()) {
							if (player.getName().equals(args[0])) {
								((Player) sender).openInventory(player.getEnderChest());
								return true;
							}
						}
						sender.sendMessage(ChatColor.RED + "player not found");
						return true;
					}
					sender.sendMessage(ChatColor.RED + "improper usage /peekEChest <player>");
					return true;
				}
				sender.sendMessage(ChatColor.RED + "you do not have permission to use this command");
			}
			return true;
		}
		
		return false;
	}
	
	private boolean isOp(Player player) {
		return this.getServer().getOperators().contains(player);
	}
	
	private String locToString(Location loc) {
		double x = Math.floor(loc.getX());
		double y = Math.floor(loc.getY());
		double z = Math.floor(loc.getZ());
		return "x: " + x + ", y: " + y + ", z: " + z;
		
	}
}
